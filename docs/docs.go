// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api": {
            "get": {
                "description": "ServerInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ServerInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ServerVersionEntity"
                        }
                    }
                }
            }
        },
        "/api/sidecar/collectors": {
            "get": {
                "description": "ListCollectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ListCollectors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.BackendListEntity"
                        }
                    }
                }
            }
        },
        "/api/sidecar/configurations/render/{node_id}/{configuration_id}": {
            "get": {
                "description": "GetConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetConfiguration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "configuration_id",
                        "name": "configuration_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CollectorConfigurationEntity"
                        }
                    }
                }
            }
        },
        "/api/sidecar_agent_info": {
            "get": {
                "description": "ListAgentInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ListAgentInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecar_agent_info/{node_id}": {
            "get": {
                "description": "GetAgentInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetAgentInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "GetAgentInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetAgentInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "请求体",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CollectorRegistrationEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteAgentInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "DeleteAgentInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecar_backend": {
            "get": {
                "description": "ListBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ListBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreateBackend",
                "parameters": [
                    {
                        "description": "请求体",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SidecarBackendEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecar_backend/{node_id}": {
            "get": {
                "description": "GetBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetBackend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "UpdateBackend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "请求体",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SidecarBackendEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "DeleteBackend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecar_template_config": {
            "get": {
                "description": "ListBackend all template configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ListBackend all template configurations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecar_template_config/": {
            "post": {
                "description": "Create a template configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a template configuration",
                "parameters": [
                    {
                        "description": "请求体",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SidecarTemplateConfigEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecar_template_config/{template_id}": {
            "get": {
                "description": "Get a template configuration",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a template configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template_id",
                        "name": "template_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a template configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a template configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template_id",
                        "name": "template_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "请求体",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SidecarTemplateConfigEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a template configuration",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a template configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template_id",
                        "name": "template_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/sidecars/{node_id}": {
            "put": {
                "description": "UpdateSidecarNodeInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "UpdateSidecarNodeInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "请求体",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RegistrationSidecarEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CollectorRegistrationEntity"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.BackendListEntity": {
            "type": "object",
            "properties": {
                "collectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.CollectorBackendEntity"
                    }
                }
            }
        },
        "entity.CollectorBackendEntity": {
            "type": "object",
            "properties": {
                "executable_path": {
                    "type": "string"
                },
                "execute_parameters": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "node_operating_system": {
                    "type": "string"
                },
                "service_type": {
                    "type": "string"
                },
                "validation_parameters": {
                    "type": "string"
                }
            }
        },
        "entity.CollectorConfigurationEntity": {
            "type": "object",
            "properties": {
                "collector_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "entity.CollectorRegistrationEntity": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ResponseCollectorActionEntity"
                    }
                },
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ConfigurationAssignmentEntity"
                    }
                },
                "configuration": {
                    "$ref": "#/definitions/entity.ResponseCollectorRegistrationConfigurationEntity"
                },
                "configuration_override": {
                    "type": "boolean"
                }
            }
        },
        "entity.ConfigurationAssignmentEntity": {
            "type": "object",
            "properties": {
                "collector_id": {
                    "type": "string"
                },
                "configuration_id": {
                    "type": "string"
                }
            }
        },
        "entity.FileEntity": {
            "type": "object",
            "properties": {
                "is_dir": {
                    "type": "boolean"
                },
                "mod_time": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "entity.MetricsEntity": {
            "type": "object",
            "properties": {
                "cpu_idle": {
                    "type": "number"
                },
                "disks_75": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "load_1": {
                    "type": "number"
                }
            }
        },
        "entity.NodeDetailsEntity": {
            "type": "object",
            "properties": {
                "collector_configuration_directory": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "log_file_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.FileEntity"
                    }
                },
                "metrics": {
                    "$ref": "#/definitions/entity.MetricsEntity"
                },
                "operating_system": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entity.StatusEntity"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.RegistrationSidecarEntity": {
            "type": "object",
            "properties": {
                "node_details": {
                    "$ref": "#/definitions/entity.NodeDetailsEntity"
                },
                "node_name": {
                    "type": "string"
                }
            }
        },
        "entity.ResponseCollectorActionEntity": {
            "type": "object",
            "properties": {
                "collector_id": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "entity.ResponseCollectorRegistrationConfigurationEntity": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "boolean"
                },
                "update_interval": {
                    "type": "integer"
                }
            }
        },
        "entity.ServerVersionEntity": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "entity.SidecarBackendEntity": {
            "type": "object",
            "properties": {
                "executable_path": {
                    "type": "string"
                },
                "execute_parameters": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operating_system": {
                    "type": "string"
                },
                "service_type": {
                    "type": "string"
                },
                "validation_parameters": {
                    "type": "string"
                }
            }
        },
        "entity.SidecarTemplateConfigEntity": {
            "type": "object",
            "properties": {
                "backend_id": {
                    "type": "integer"
                },
                "config_template": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.StatusBackendEntity": {
            "type": "object",
            "properties": {
                "collector_id": {
                    "type": "string"
                },
                "configuration_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "verbose_message": {
                    "type": "string"
                }
            }
        },
        "entity.StatusEntity": {
            "type": "object",
            "properties": {
                "collectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.StatusBackendEntity"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "response.ApiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "响应数据，一般从这里前端从这个里面取出数据展示"
                },
                "err_code": {
                    "description": "错误码，0表示无错误",
                    "type": "integer"
                },
                "message": {
                    "description": "提示信息",
                    "type": "string"
                },
                "request_id": {
                    "description": "请求的唯一ID",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Swagger  API",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
