// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"collector-sidecar-server/internal/handler"
	"collector-sidecar-server/internal/handler/v1"
	"collector-sidecar-server/internal/repo"
	"collector-sidecar-server/internal/router"
	"collector-sidecar-server/internal/service"
	"collector-sidecar-server/pkg/cache"
	"collector-sidecar-server/pkg/db"
	"collector-sidecar-server/server"
	"github.com/google/wire"
)

import (
	_ "collector-sidecar-server/docs"
	_ "github.com/alecthomas/template"
	_ "github.com/swaggo/files"
	_ "github.com/swaggo/gin-swagger"
)

// Injectors from wire.go:

// initRouter 初始化router
func initRouter(ds db.IDataSource, cacheClient cache.ICache) server.Router {
	sidecarRepoImpl := repo.NewSidecarRepo(ds)
	sidecarServiceImpl := service.NewSidecarService(sidecarRepoImpl)
	sidecarHandler := v1.NewSidecarHandler(sidecarServiceImpl)
	sidecarAgentInfoRepoImpl := repo.NewSidecarAgentInfoRepo(ds)
	sidecarAgentInfoServiceImpl := service.NewSidecarAgentInfoService(sidecarAgentInfoRepoImpl)
	sidecarAgentInfoHandler := v1.NewSidecarAgentInfoHandler(sidecarAgentInfoServiceImpl)
	sidecarBackendServiceImpl := service.NewSidecarBackendService()
	sidecarBackendHandler := v1.NewSidecarBackendHandler(sidecarBackendServiceImpl)
	sidecarTemplateConfigRepoImpl := repo.NewSidecarTemplateConfigRepo(ds)
	sidecarTemplateConfigImpl := service.NewSidecarTemplateConfigService(sidecarTemplateConfigRepoImpl)
	sidecarTemplateConfigHandler := v1.NewSidecarTemplateConfigHandler(sidecarTemplateConfigImpl)
	apiRouter := router.NewApiRouter(sidecarHandler, sidecarAgentInfoHandler, sidecarBackendHandler, sidecarTemplateConfigHandler)
	return apiRouter
}

// wire.go:

var providerSet = wire.NewSet(repo.ProviderSet, service.ProviderSet, handler.ProviderSet)
